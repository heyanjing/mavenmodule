<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath*:/config/config.properties"/>

    <!-- 要扫描的包 -->
    <context:component-scan base-package="com.he.spring.web">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <!-- 请求超时时间 -->
        <property name="checkoutTimeout" value="30000"/>
        <!-- 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
        <property name="idleConnectionTestPeriod" value="30"/>
        <!-- 连接数据库连接池最大空闲时间 -->
        <property name="maxIdleTime" value="30"/>
        <!-- 连接池初始化连接数 -->
        <property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="20"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="5"/>
    </bean>
    <!-- 配置 JPA 的 EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="com.he.spring.entity"/>
        <property name="jpaProperties">
            <props>
                <!-- 生成的数据表的列的映射策略
                <prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>
                -->
                <prop key="hibernate.physical_naming_strategy">${hibernate.physical_naming_strategy}</prop>
                <!-- hibernate 基本属性 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!--二级缓存 一般不开启
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                -->
            </props>
        </property>
    </bean>
    <!-- 配置 SpringData
     Spring 初始化容器时将会扫描 base-package 指定的包目录及其子目录，为继承 Repository 或其子接口的接口创建代理对象
     -->
    <jpa:repositories base-package="com.he.spring.web.dao" entity-manager-factory-ref="entityManagerFactory" factory-class="com.he.maven.module.data.repo.BaseRepoFactoryBean" />
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <!-- 开启事务注解方式配置事物-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--配置事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" timeout="300"/>
            <tx:method name="find*" read-only="true" timeout="300"/>
            <tx:method name="list*" read-only="true" timeout="300"/>
            <tx:method name="page*" read-only="true" timeout="300"/>
            <!-- 所有非上面方法开头的方法在同一事务里 -->
            <tx:method name="*" propagation="REQUIRED" timeout="300" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--配置申明式事务 -->
    <aop:config>
        <aop:pointcut id="aopPointcut" expression="execution(* com.he.spring.web.service..*.*(..))"/>
        <aop:advisor pointcut-ref="aopPointcut" advice-ref="txAdvice"/>
    </aop:config>

    <!--开启aop注解
    proxy-target-class="true" 指定使用cglib动态代理aop，即使注入的类实现了接口也可以直接注入而不需要用接口注入
    默认情况:注入的是接口则使用jdk代理,
                     类则使用cglib
    <aop:aspectj-autoproxy  proxy-target-class="true"/>
    -->

</beans>
