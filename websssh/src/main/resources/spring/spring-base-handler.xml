<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    定义无需Controller的url地址及其对应的view映射
    用于支持web.xml中配置的错误页面
     -->
    <mvc:view-controller path="/error/403" view-name="/error/403"/>
    <mvc:view-controller path="/error/404" view-name="/error/404"/>
    <mvc:view-controller path="/error/500" view-name="/error/500"/>


    <!--
        springmvc全局异常处理
        com.he.maven.module.exhandle.SMExceptionResolver
        org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
        com.he.maven.module.exhandle.GlobalExceptionHandlerSimple
    -->
    <bean class=" com.he.maven.module.exhandle.GlobalExceptionHandlerSimple">
        <property name="defaultErrorView" value="/error/500"></property>
        <property name="defaultStatusCode" value="500"/>
        <!--定义异常处理页面用来获取异常对象的变量名，如果不设置，默认名为exception-->
        <property name="exceptionAttribute" value="ex"/>
        <!--发生对应异常时，返回的视图名称-->
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.AuthorizationException">/error/403</prop>
                <prop key="org.springframework.web.HttpRequestMethodNotSupportedException">/error/404</prop>
                <prop key="java.lang.Throwable">/error/500</prop>
            </props>
        </property>
        <!--返回视图时对应的状态码-->
        <property name="statusCodes">
            <props>
                <prop key="/error/403">403</prop>
                <prop key="/error/404">404</prop>
                <prop key="/error/500">500</prop>
            </props>
        </property>
    </bean>

   <!-- <bean class="com.he.maven.module.exhandle.GlobalExceptionHandlerCustom"/>-->

</beans>
