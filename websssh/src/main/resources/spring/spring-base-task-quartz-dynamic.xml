<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        quartz框架
        动态定时任务的实现
    -->

    <!--
    <bean id="jobCustom" class="com.he.spring.web.task.dynamic.JobCustom"/>

    &lt;!&ndash; 定义调用对象和调用对象的方法，这个配置和普通的一样的,id是JobDetail的名字  &ndash;&gt;
    <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        &lt;!&ndash; 调用的类  &ndash;&gt;
        <property name="targetObject" ref="jobCustom"/>
        &lt;!&ndash; 调用类中的方法  &ndash;&gt;
        <property name="targetMethod" value="execute"/>
        &lt;!&ndash; 是否并发  &ndash;&gt;
        <property name="concurrent" value="false"/>
    </bean>

    &lt;!&ndash; 定义触发时间 ，这边就不同了，这里必须将时间设置成无限长，因为我们要去读取数据库的时间来做为定时器的触发时间&ndash;&gt;
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean ">
        <property name="jobDetail" ref="jobtask"/>
        &lt;!&ndash; cron表达式  &ndash;&gt;
        <property name="cronExpression" value="0/1 * * * * ?"/>
    </bean>

    <bean id="startQuertz" lazy-init="true" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
            </list>
        </property>
    </bean>

    &lt;!&ndash;这个类是用来设置触发时间的， startJobs方法启动调度容器，然后按照上面触发器每隔1s执行所配置的myJob2.doSomething()方法 &ndash;&gt;
    <bean id="quartzManager" class="com.he.spring.web.task.dynamic.QuartzManager" lazy-init="false"
          init-method="startJobs">
        &lt;!&ndash;这个对象一定要注入，这样类才能进行管理，还有在类型要用get set方法，不然会报错。&ndash;&gt;
        <property name="scheduler" ref="startQuertz"/>
    </bean>-->

</beans>
