
任务执行规则说明

先来看看@Scheduled注解的源码

@Target({ElementType.METHOD, ElementType.ANNOTATION_TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Repeatable(Schedules.class)
public @interface Scheduled {

    String cron() default "";

    String zone() default "";

    long fixedDelay() default -1;

    String fixedDelayString() default "";

    long fixedRate() default -1;

    String fixedRateString() default "";

    long initialDelay() default -1;

    String initialDelayString() default "";
}
可以看出，注解中可以传8种参数：

cron：指定cron表达式
zone：默认使用服务器默认时区。可以设置为java.util.TimeZone中的zoneId
fixedDelay：从上一个任务完成开始到下一个任务开始的间隔，单位毫秒
fixedDelayString：同上，时间值是String类型
fixedRate：从上一个任务开始到下一个任务开始的间隔，单位毫秒
fixedRateString：同上，时间值是String类型
initialDelay：任务首次执行延迟的时间，单位毫秒
initialDelayString：同上，时间值是String类型
cron表达式的使用方法

Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式：

Seconds Minutes Hours DayofMonth Month DayofWeek Year
Seconds Minutes Hours DayofMonth Month DayofWeek
每一个域可出现的字符如下：

Seconds: 可出现", - * /"四个字符，有效范围为0-59的整数
Minutes: 可出现", - * /"四个字符，有效范围为0-59的整数
Hours: 可出现", - * /"四个字符，有效范围为0-23的整数
DayofMonth: 可出现", - * / ? L W C"八个字符，有效范围为0-31的整数
Month: 可出现", - * /"四个字符，有效范围为1-12的整数或JAN-DEC
DayofWeek: 可出现", - * / ? L C #"四个字符，有效范围为1-7的整数或SUN-SAT两个范围。1表示星期天，2表示星期一， 依次类推
Year: 可出现", - * /"四个字符，有效范围为1970-2099年
每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是：

*：表示匹配该域的任意值，假如在Minutes域使用*, 即表示每分钟都会触发事件。
?：只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和 DayofWeek会相互影响。例如想在每月的20日触发调度，不管20日到底是星期几，则只能使用如下写法： 13 13 15 20 ?, 其中最后一位只能用？，而不能使用，如果使用*表示不管星期几都会触发，实际上并不是这样。
-：表示范围，例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次。
/：表示起始时间开始触发，然后每隔固定时间触发一次，例如在Minutes域使用5/20,则意味着5分钟触发一次，而25，45等分别触发一次。
,：表示列出枚举值值。例如：在Minutes域使用5,20，则意味着在5和20分每分钟触发一次。
L：表示最后，只能出现在DayofWeek和DayofMonth域，如果在DayofWeek域使用5L,意味着在最后的一个星期四触发。
W：表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一 到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份。
LW：这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。
#：用于确定每个月第几个星期几，只能出现在DayofMonth域。例如在4#2，表示某月的第二个星期三。

作者：Joepis
链接：http://www.jianshu.com/p/25c601f43552
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



















Cron表达式的格式：秒 分 时 日 月 周 年(可选)。

               字段名                 允许的值                        允许的特殊字符

               秒                         0-59                               , - * /

               分                         0-59                               , - * /

               小时                   0-23                               , - * /

               日                         1-31                               , - * ? / L W C

               月                         1-12 or JAN-DEC          , - * /

               周几                     1-7 or SUN-SAT            , - * ? / L C #

               年 (可选字段)     empty, 1970-2099      , - * /

               “?”字符：表示不确定的值

               “,”字符：指定数个值

               “-”字符：指定一个值的范围

               “/”字符：指定一个值的增加幅度。n/m表示从n开始，每次增加m

               “L”字符：用在日表示一个月中的最后一天，用在周表示该月最后一个星期X

               “W”字符：指定离给定日期最近的工作日(周一到周五)

               “#”字符：表示该月第几个周X。6#3表示该月第3个周五

         2）Cron表达式范例：

                 每隔5秒执行一次：*/5 * * * * ?

                 每隔1分钟执行一次：0 */1 * * * ?

                 每天23点执行一次：0 0 23 * * ?

                 每天凌晨1点执行一次：0 0 1 * * ?

                 每月1号凌晨1点执行一次：0 0 1 1 * ?

                 每月最后一天23点执行一次：0 0 23 L * ?

                 每周星期天凌晨1点实行一次：0 0 1 ? * L

                 在26分、29分、33分执行一次：0 26,29,33 * * * ?

                 每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?













字段        			 允许值    				允许的特殊字符
秒	 			0-59	 			, - * /
分	 			0-59	 			, - * /
小时	 			0-23	 			, - * /
日期	 			1-31	 			, - *   / L W C
月份	 			1-12 或者 JAN-DEC	 	, - * /
星期	 			1-7 或者 SUN-SAT	 	, - *   / L C #
年（可选）	 	留空, 1970-2099	 	, - * /
　
如上面的表达式所示:

“*”字符被用来指定所有的值。如：”*“在分钟的字段域里表示“每分钟”。

“-”字符被用来指定一个范围。如：“10-12”在小时域意味着“10点、11点、12点”。

“,”字符被用来指定另外的值。如：“MON,WED,FRI”在星期域里表示”星期一、星期三、星期五”.

“?”字符只在日期域和星期域中使用。它被用来指定“非明确的值”。当你需要通过在这两个域中的一个来指定一些东西的时候，它是有用的。看下面的例子你就会明白。


“L”字符指定在月或者星期中的某天（最后一天）。即“Last ”的缩写。但是在星期和月中“Ｌ”表示不同的意思，如：在月子段中“L”指月份的最后一天-1月31日，2月28日，如果在星期字段中则简单的表示为“7”或者“SAT”。如果在星期字段中在某个value值得后面，则表示“某月的最后一个星期value”,如“6L”表示某月的最后一个星期五。

“W”字符只能用在月份字段中，该字段指定了离指定日期最近的那个星期日。

“#”字符只能用在星期字段，该字段指定了第几个星期value在某月中


表达式
 意义
"0 0 12 * * ?"	 	每天中午12点触发
"0 15 10 ? * *"	 	每天上午10:15触发
"0 15 10 * * ?"	 	每天上午10:15触发
"0 15 10 * * ? *"	 	每天上午10:15触发
"0 15 10 * * ? 2005"	 	2005年的每天上午10:15触发
"0 * 14 * * ?"	 	在每天下午2点到下午2:59期间的每1分钟触发
"0 0/5 14 * * ?"	 	在每天下午2点到下午2:55期间的每5分钟触发
"0 0/5 14,18 * * ?"	 	在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发
"0 0-5 14 * * ?"	 	在每天下午2点到下午2:05期间的每1分钟触发
"0 10,44 14 ? 3 WED"	 	每年三月的星期三的下午2:10和2:44触发
"0 15 10 ? * MON-FRI"	 	周一至周五的上午10:15触发
"0 15 10 15 * ?"	 	每月15日上午10:15触发
"0 15 10 L * ?"	 	每月最后一日的上午10:15触发
"0 15 10 ? * 6L"	 	每月的最后一个星期五上午10:15触发
"0 15 10 ? * 6L 2002-2005"	 	2002年至2005年的每月的最后一个星期五上午10:15触发
"0 15 10 ? * 6#3"	 	每月的第三个星期五上午10:15触发
每天早上6点

0 6 * * *

每两个小时

0 */2 * * *
晚上11点到早上8点之间每两个小时，早上八点

0 23-7/2，8 * * *

每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点

0 11 4 * 1-3
1月1日早上4点

0 4 1 1 *


















