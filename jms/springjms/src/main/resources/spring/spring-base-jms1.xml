<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--ActiveMQ相关配置 -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://127.0.0.1:61616" />
        <property name="userName" value="admin"></property>
        <property name="password" value="admin"></property>
    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
        <property name="connectionFactory" ref="targetConnectionFactory"/>
        <!--最大连接数，因为上面是使用了pool -->
        <property name="maxConnections" value="100"></property>
    </bean>
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="pooledConnectionFactory" />
    </bean>
    <bean id="connectionFactoryTopic1" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!--消费者标示id -->
        <property name="clientId" value="clientId_001" />
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="pooledConnectionFactory" />
    </bean>
    <bean id="connectionFactoryTopic2" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!--消费者标示id -->
        <property name="clientId" value="clientId_002" />
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="pooledConnectionFactory" />
    </bean>
    <!-- queue目的地配置 -->
    <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="spring-queue"/>
    </bean>
    <!-- topic目的地配置，其实不管是topic还是queue则他们的底层实现不同但是通过封装api就差不多了，而在spring中更是简单 -->
    <bean id="destinationTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg index="0" value="spring-topic"/>
    </bean>

    <!-- spring 使用jmsTemplate来实现消息的发送和接受 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"></property>
        <!--目的地的设置，使用spring来使用activemq时，使用queue还是topic很方便，在这里引用不同地址就ok了 -->
        <property name="defaultDestination" ref="destination"></property>
        <!--转换器，我们自己可以继承重写这个类的方法 ，这里使用spring提供的默认方法
        SimpleMessageConverter
        MappingJackson2MessageConverter
        -->
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
        </property>
        <property name="receiveTimeout" value="30000"/>
        <!--开启订阅模式-->
        <property name="pubSubDomain" value="true"/>
        <property name="sessionAcknowledgeMode" value="1" />
        <!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置explicitQosEnabled为true，默认false-->
        <property name="explicitQosEnabled" value="true" />
        <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
        <property name="deliveryMode" value="2"/>
    </bean>


    <!--异步监听 -->
    <bean id="myMessageListener" class="com.he.spring.web.MsgListener"/>
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="destination" />
        <property name="messageListener" ref="myMessageListener" />
    </bean>
    <bean id="jmsContainerTopic1" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactoryTopic1" />
        <property name="destination" ref="destinationTopic" />
        <property name="messageListener" ref="myMessageListener" />
        <!-- 发布订阅模式 -->
        <property name="pubSubDomain" value="true" />
        <!-- 消息持久化值设置为true -->
        <property name="subscriptionDurable" value="true" />
        <!-- 接收者ID -->
        <property name="clientId" value="clientId_001" />
        <property name="durableSubscriptionName" value="clientId_001" />
    </bean>
    <bean id="jmsContainerTopic2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactoryTopic2" />
        <property name="destination" ref="destinationTopic" />
        <property name="messageListener" ref="myMessageListener" />
        <!-- 发布订阅模式 -->
        <property name="pubSubDomain" value="true" />
        <!-- 消息持久化值设置为true -->
        <property name="subscriptionDurable" value="true" />
        <!-- 接收者ID -->
        <property name="clientId" value="clientId_002" />
        <property name="durableSubscriptionName" value="clientId_002" />
    </bean>
</beans>